{"ast":null,"code":"import { call, put, takeEvery, spawn } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\n\nfunction* fetchSearchSaga(action) {\n  try {\n    const json = {\n      name: action.payload\n    };\n    const {\n      data\n    } = yield call([axios, \"post\"], \"/api/nba/player\", json);\n    yield put(actions.searchSuccess(data));\n  } catch (error) {\n    yield put(actions.searchFail(error.response));\n  }\n}\n\nfunction* watchSearch() {\n  yield takeEvery(actions.SEARCH, fetchSearchSaga);\n}\n\nexport default function* rootSaga() {\n  yield spawn(watchSearch);\n}","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/basic/react-saga/src/reducers/sagas/index.js"],"names":["call","put","takeEvery","spawn","actions","fetchSearchSaga","action","json","name","payload","data","axios","searchSuccess","error","searchFail","response","watchSearch","SEARCH","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,KAA/B,QAA4C,oBAA5C;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;;AAEA,UAAUC,eAAV,CAA0BC,MAA1B,EAAkC;AAChC,MAAI;AACF,UAAMC,IAAI,GAAG;AACXC,MAAAA,IAAI,EAAEF,MAAM,CAACG;AADF,KAAb;AAGA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,IAAI,CAAC,CAACW,KAAD,EAAQ,MAAR,CAAD,EAAkB,iBAAlB,EAAqCJ,IAArC,CAA3B;AACA,UAAMN,GAAG,CAACG,OAAO,CAACQ,aAAR,CAAsBF,IAAtB,CAAD,CAAT;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACG,OAAO,CAACU,UAAR,CAAmBD,KAAK,CAACE,QAAzB,CAAD,CAAT;AACD;AACF;;AAED,UAAUC,WAAV,GAAwB;AACtB,QAAMd,SAAS,CAACE,OAAO,CAACa,MAAT,EAAiBZ,eAAjB,CAAf;AACD;;AAED,eAAe,UAAUa,QAAV,GAAqB;AAClC,QAAMf,KAAK,CAACa,WAAD,CAAX;AACD","sourcesContent":["import { call, put, takeEvery, spawn } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\n\nfunction* fetchSearchSaga(action) {\n  try {\n    const json = {\n      name: action.payload,\n    };\n    const { data } = yield call([axios, \"post\"], \"/api/nba/player\", json);\n    yield put(actions.searchSuccess(data));\n  } catch (error) {\n    yield put(actions.searchFail(error.response));\n  }\n}\n\nfunction* watchSearch() {\n  yield takeEvery(actions.SEARCH, fetchSearchSaga);\n}\n\nexport default function* rootSaga() {\n  yield spawn(watchSearch);\n}\n"]},"metadata":{},"sourceType":"module"}